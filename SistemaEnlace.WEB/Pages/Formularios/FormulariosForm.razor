@using SistemaEnlace.Shared.Entities
@using SistemaEnlace.WEB.Shared
@using SistemaEnlace.WEB.Repositories
@inject SweetAlertService sweetAlertService
@inject IRepository repository

<EditForm Model="formulario" OnSubmit="HandleSubmit">
    <DataAnnotationsValidator />

@*     <div class="mb-3">
        <label for="id">ID: </label>
        <div>
            <InputNumber id="id" @bind-Value="formulario.Id" />
            <ValidationMessage For="@(() => formulario.Id)" />
        </div>
    </div> *@

    <div class="mb-3">
        <label for="fecha">Fecha: </label>
        <div>
            <InputDate id="fecha" @bind-Value="formulario.Fecha" placeholder="Fecha" />
            <ValidationMessage For="@(() => formulario.Fecha)" />
        </div>
    </div>

    <div class="mb-3">
        <label for="resumen">Resumen: </label>
        <div>
            <InputText id="resumen" @bind-Value="formulario.Resumen" placeholder="Resumen" />
            <ValidationMessage For="@(() => formulario.Resumen)" />
        </div>
    </div>

    <div class="mb-3">
        <label for="CONVERSACION ID">Conversacion Id: </label>
        <div>
            <InputNumber id="resumen" @bind-Value="formulario.Conversacionid" placeholder="Resumen" />
            <ValidationMessage For="@(() => formulario.Conversacionid)" />
        </div>
    </div>

    <div class="mb-3">
        <label for="FUNDACION ID">Fundacion Id: </label>
        <div>
            <InputNumber id="resumen" @bind-Value="formulario.Fundacionid" placeholder="Resumen" />
            <ValidationMessage For="@(() => formulario.Fundacionid)" />
        </div>
    </div>


    <div class="mb-3">
        <label for="SUPERVISOR">SUPERSISOR Id: </label>
        <div>
            <InputNumber id="resumen" @bind-Value="formulario.Supervisorid" placeholder="Resumen" />
            <ValidationMessage For="@(() => formulario.Supervisorid)" />
        </div>
    </div>

    <button class="btn btn-primary" type="submit">Guardar</button>
    <button class="btn btn-success" type="button" @onclick="HandleReturnAction">Regresar</button>
    <button class="btn btn-info" type="reset"><i class="bi bi-x-circle" /> Limpiar</button>
</EditForm>

@code {
    private EditContext editContext = null!;

    protected override void OnInitialized()
    {
        editContext = new EditContext(formulario);
    }

    [EditorRequired]
    [Parameter]
    public Formulario formulario { get; set; }

    [EditorRequired]
    [Parameter]
    public EventCallback OnSubmit { get; set; }

    [EditorRequired]
    [Parameter]
    public EventCallback ReturnAction { get; set; }

    public bool FormularioPosteadoConExito { get; set; } = false;

    private async Task HandleSubmit()
    {
        if (OnSubmit.HasDelegate)
        {
            await OnSubmit.InvokeAsync(null);
        }
    }

    private async Task HandleReturnAction()
    {
        if (ReturnAction.HasDelegate)
        {
            await ReturnAction.InvokeAsync(null);
        }
    }
}
